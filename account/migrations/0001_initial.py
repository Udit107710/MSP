# Generated by Django 2.2.4 on 2019-09-07 10:41

import account.models
import django.core.validators
from django.db import migrations, models
import django.utils.timezone
import phonenumber_field.modelfields
import versatileimagefield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=256)),
                ('last_name', models.CharField(blank=True, max_length=256)),
                ('token', models.UUIDField(default=account.models.get_token, editable=False, unique=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('avatar', versatileimagefield.fields.VersatileImageField(blank=True, null=True, upload_to='user-avatars')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('department', models.CharField(max_length=200)),
                ('sap_id', models.CharField(max_length=10)),
                ('is_ac', models.BooleanField(default=False)),
                ('is_professor', models.BooleanField(default=False)),
                ('is_hod', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('enrollment_number', models.CharField(blank=True, max_length=10, null=True)),
                ('program', models.CharField(blank=True, max_length=100, null=True)),
                ('semester', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(12), django.core.validators.MinValueValidator(1)])),
                ('cgpa', models.FloatField(blank=True, null=True)),
                ('field_of_study', models.CharField(blank=True, max_length=200, null=True)),
                ('slots_occupied', models.IntegerField(blank=True, default=0, validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(0)])),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'permissions': [('manage_users', 'Can manage users'), ('manage_staff', 'Can manage staff')],
            },
        ),
    ]
